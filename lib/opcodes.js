// For mapping enum integer values to opcode names
exports.opcodes = [
  "ISLT", "ISGE", "ISLE", "ISGT", "ISEQV", "ISNEV", "ISEQS",
  "ISNES", "ISEQN", "ISNEN", "ISEQP", "ISNEP", "ISTC", "ISFC",
  "IST", "ISF", "MOV", "NOT", "UNM", "LEN", "ADDVN",
  "SUBVN", "MULVN", "DIVVN", "MODVN", "ADDNV", "SUBNV", "MULNV",
  "DIVNV", "MODNV", "ADDVV", "SUBVV", "MULVV", "DIVVV", "MODVV",
  "POW", "CAT", "KSTR", "KCDATA", "KSHORT", "KNUM", "KPRI",
  "KNIL", "UGET", "USETV", "USETS", "USETN", "USETP", "UCLO",
  "FNEW", "TNEW", "TDUP", "GGET", "GSET", "TGETV", "TGETS",
  "TGETB", "TSETV", "TSETS", "TSETB", "TSETM", "CALLM", "CALL",
  "CALLMT", "CALLT", "ITERC", "ITERN", "VARG", "ISNEXT", "RETM",
  "RET", "RET0", "RET1", "FORI", "JFORI", "FORL", "IFORL",
  "JFORL", "ITERL", "IITERL", "JITERL", "LOOP", "ILOOP", "JLOOP",
  "JMP", "FUNCF", "IFUNCF", "JFUNCF", "FUNCV", "IFUNCV", "JFUNCV",
  "FUNCC", "FUNCCW"
];


// For mapping opcode names to parse instructions
exports.bcdef = {
  ISLT: {ma: "var", mc: "var", mt: "lt"},
  ISGE: {ma: "var", mc: "var", mt: "lt"},
  ISLE: {ma: "var", mc: "var", mt: "le"},
  ISGT: {ma: "var", mc: "var", mt: "le"},
  ISEQV: {ma: "var", mc: "var", mt: "eq"},
  ISNEV: {ma: "var", mc: "var", mt: "eq"},
  ISEQS: {ma: "var", mc: "str", mt: "eq"},
  ISNES: {ma: "var", mc: "str", mt: "eq"},
  ISEQN: {ma: "var", mc: "num", mt: "eq"},
  ISNEN: {ma: "var", mc: "num", mt: "eq"},
  ISEQP: {ma: "var", mc: "pri", mt: "eq"},
  ISNEP: {ma: "var", mc: "pri", mt: "eq"},
  ISTC: {ma: "dst", mc: "var"},
  ISFC: {ma: "dst", mc: "var"},
  IST: {mc: "var"},
  ISF: {mc: "var"},
  MOV: {ma: "dst", mc: "var"},
  NOT: {ma: "dst", mc: "var"},
  UNM: {ma: "dst", mc: "var", mt: "unm"},
  LEN: {ma: "dst", mc: "var", mt: "len"},
  ADDVN: {ma: "dst", mb: "var", mc: "num", mt: "add"},
  SUBVN: {ma: "dst", mb: "var", mc: "num", mt: "sub"},
  MULVN: {ma: "dst", mb: "var", mc: "num", mt: "mul"},
  DIVVN: {ma: "dst", mb: "var", mc: "num", mt: "div"},
  MODVN: {ma: "dst", mb: "var", mc: "num", mt: "mod"},
  ADDNV: {ma: "dst", mb: "var", mc: "num", mt: "add"},
  SUBNV: {ma: "dst", mb: "var", mc: "num", mt: "sub"},
  MULNV: {ma: "dst", mb: "var", mc: "num", mt: "mul"},
  DIVNV: {ma: "dst", mb: "var", mc: "num", mt: "div"},
  MODNV: {ma: "dst", mb: "var", mc: "num", mt: "mod"},
  ADDVV: {ma: "dst", mb: "var", mc: "var", mt: "add"},
  SUBVV: {ma: "dst", mb: "var", mc: "var", mt: "sub"},
  MULVV: {ma: "dst", mb: "var", mc: "var", mt: "mul"},
  DIVVV: {ma: "dst", mb: "var", mc: "var", mt: "div"},
  MODVV: {ma: "dst", mb: "var", mc: "var", mt: "mod"},
  POW: {ma: "dst", mb: "var", mc: "var", mt: "pow"},
  CAT: {ma: "dst", mb: "rbase", mc: "rbase", mt: "concat"},
  KSTR: {ma: "dst", mc: "str"},
  KCDATA: {ma: "dst", mc: "cdata"},
  KSHORT: {ma: "dst", mc: "lits"},
  KNUM: {ma: "dst", mc: "num"},
  KPRI: {ma: "dst", mc: "pri"},
  KNIL: {ma: "base", mc: "base"},
  UGET: {ma: "dst", mc: "uv"},
  USETV: {ma: "uv", mc: "var"},
  USETS: {ma: "uv", mc: "str"},
  USETN: {ma: "uv", mc: "num"},
  USETP: {ma: "uv", mc: "pri"},
  UCLO: {ma: "rbase", mc: "jump"},
  FNEW: {ma: "dst", mc: "func", mt: "gc"},
  TNEW: {ma: "dst", mc: "lit", mt: "gc"},
  TDUP: {ma: "dst", mc: "tab", mt: "gc"},
  GGET: {ma: "dst", mc: "str", mt: "index"},
  GSET: {ma: "var", mc: "str", mt: "newindex"},
  TGETV: {ma: "dst", mb: "var", mc: "var", mt: "index"},
  TGETS: {ma: "dst", mb: "var", mc: "str", mt: "index"},
  TGETB: {ma: "dst", mb: "var", mc: "lit", mt: "index"},
  TSETV: {ma: "var", mb: "var", mc: "var", mt: "newindex"},
  TSETS: {ma: "var", mb: "var", mc: "str", mt: "newindex"},
  TSETB: {ma: "var", mb: "var", mc: "lit", mt: "newindex"},
  TSETM: {ma: "base", mc: "num", mt: "newindex"},
  CALLM: {ma: "base", mb: "lit", mc: "lit", mt: "call"},
  CALL: {ma: "base", mb: "lit", mc: "lit", mt: "call"},
  CALLMT: {ma: "base", mc: "lit", mt: "call"},
  CALLT: {ma: "base", mc: "lit", mt: "call"},
  ITERC: {ma: "base", mb: "lit", mc: "lit", mt: "call"},
  ITERN: {ma: "base", mb: "lit", mc: "lit", mt: "call"},
  VARG: {ma: "base", mb: "lit", mc: "lit"},
  ISNEXT: {ma: "base", mc: "jump"},
  RETM: {ma: "base", mc: "lit"},
  RET: {ma: "rbase", mc: "lit"},
  RET0: {ma: "rbase", mc: "lit"},
  RET1: {ma: "rbase", mc: "lit"},
  FORI: {ma: "base", mc: "jump"},
  JFORI: {ma: "base", mc: "jump"},
  FORL: {ma: "base", mc: "jump"},
  IFORL: {ma: "base", mc: "jump"},
  JFORL: {ma: "base", mc: "lit"},
  ITERL: {ma: "base", mc: "jump"},
  IITERL: {ma: "base", mc: "jump"},
  JITERL: {ma: "base", mc: "lit"},
  LOOP: {ma: "rbase", mc: "jump"},
  ILOOP: {ma: "rbase", mc: "jump"},
  JLOOP: {ma: "rbase", mc: "lit"},
  JMP: {ma: "rbase", mc: "jump"},
  FUNCF: {ma: "rbase"},
  IFUNCF: {ma: "rbase"},
  JFUNCF: {ma: "rbase", mc: "lit"},
  FUNCV: {ma: "rbase"},
  IFUNCV: {ma: "rbase"},
  JFUNCV: {ma: "rbase", mc: "lit"},
  FUNCC: {ma: "rbase"},
  FUNCCW: {ma: "rbase"}
};
